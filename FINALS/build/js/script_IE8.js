!function(){function e(e){e=e||fixEvent.call(this,window.event),e.currentTarget=this,e.target=e.srcElement;for(var a=e.target.parentNode.parentNode.lastChild,t=1;t<a.children.length;t++){var n="";switch(t){case 1:n="-300px 0";break;case 2:n="-600px 0";break;case 3:n="0 0"}if(a.parentElement.style.backgroundPosition=n,"span-wrap active"==a.children[t].className){if(t==a.children.length-1){a.children[t].className="span-wrap";var r=1;a.children[r].className="span-wrap active";break}a.children[t].className="span-wrap";var r=+t+1;a.children[r].className="span-wrap active";break}}}function a(e){e=e||fixEvent.call(this,window.event),e.currentTarget=this,e.target=e.srcElement;for(var a=e.target.parentNode.parentNode.lastChild,t=1;t<a.children.length;t++){var n="";switch(t){case 1:n="-600px 0";break;case 2:n="0 0";break;case 3:n="-300px 0"}if(a.parentElement.style.backgroundPosition=n,"span-wrap active"==a.children[t].className){if(1==t){a.children[t].className="span-wrap";var r=a.children.length-1;a.children[r].className="span-wrap active";break}a.children[t].className="span-wrap";var r=+t-1;a.children[r].className="span-wrap active";break}}}function t(){var e=document.getElementById("serchVal");if(null!=e){e.value}else;var a=$("#serchVal").val();if(a)var t="q="+a;$.ajax({url:"https://pixabay.com/api/?key=2668312-be09c273d04a440a3f3617dc4&per_page=7&"+t,dataType:"jsonp",error:function(e){console.log("Error: "+e)},success:function(e){for(var a=e,t=0;t<a.hits.length;t++)document.getElementById("b"+(t+1)).style.backgroundImage="url('"+a.hits[t].webformatURL+"')",document.getElementById("b"+(t+1)).firstChild.innerHTML=a.hits[t].tags}})}t();for(var n=1;n<=3;n++){var r="r"+n,c="l"+n,l=document.getElementById(r),s=document.getElementById(c);l.attachEvent("onclick",e),s.attachEvent("onclick",a)}document.onkeydown=function(e){var a=event.which||event.keyCode;13==a&&(event.preventDefault?event.preventDefault():event.returnValue=!1,t())},document.getElementById("search").attachEvent("onclick",t)}();
//# sourceMappingURL=data:application/json;base64,
