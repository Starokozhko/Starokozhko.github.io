/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */progress,sub,sup{vertical-align:baseline}button,hr,input{overflow:visible}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{color:inherit;display:table;max-width:100%;white-space:normal}textarea{overflow:auto}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}@font-face{font-family:Roboto;font-style:normal;font-weight:300;src:local("Roboto Light"),local("Roboto-Light"),url(../fonts/roboto-light-webfont.woff2) format("woff2"),url(../fonts/roboto-light-webfont.woff)}@font-face{font-family:Montserrat;font-style:normal;font-weight:700;src:local("Montserrat-Bold"),local("MontserratBold"),url(../fonts/montserrat-bold-webfont.woff2) format("woff2"),url(../fonts/montserrat-bold-webfont.woff)}@font-face{font-family:Montserrat;font-style:normal;font-weight:400;src:local("Montserrat-Regular"),local("MontserratRegular"),url(../fonts/montserrat-regular-webfont.woff2) format("woff2"),url(../fonts/montserrat-regular-webfont.woff)}@media only screen and (-Webkit-min-device-pixel-ratio:1.5),only screen and (-moz-min-device-pixel-ratio:1.5),only screen and (-o-min-device-pixel-ratio:3 / 2),only screen and (min-device-pixel-ratio:1.5){header{background:url(../img/RTheader_fon.jpg) center no-repeat}.step1{background:url(../img/steps/RTstep_sprite.jpg) no-repeat}.step2{background:url(../img/steps/RTstep_sprite.jpg) -300px 0 no-repeat}.step3{background:url(../img/steps/RTstep_sprite.jpg) -600px 0 no-repeat}}@media screen and (min-width:960px){.wrapper{width:940px}}@media screen and (max-width:959px){.wrapper{width:748px;margin:0 auto}.header-top-logo{margin-left:39px}.singUp{margin:-1px 39px 0 19px}.header-title-h1{margin:0 0 0 -5px}.header-title-h2{margin:19px 0 30px -2px}.header-title-btn{padding-right:3px}.steps-h3{margin:0 0 32px 7px}.partner-h3{margin:2px 0 30px -6px}.tile{width:748px;display:block;margin:0 auto}.steps-block{width:236px}.steps-block-arrow{margin-top:40px}.partner-block{text-align:center;margin-bottom:-20px}.partner-block-item{display:inline-block;vertical-align:top;float:none;margin:0 0 55px}.bItem1{padding:0 0 0 129px}.bItem2{padding:0 118px 0 0}.bItem3{padding:2px 0 0 118px}.bItem4{padding:2px 127px 0 0}.partner-btn{margin:3px auto 0}.tile-blockS{width:230px;margin:8px 8px 10px}.tile-wrapper{margin:0 0 0 10px}.block1,.block2,.block3,.block4,.block5,.block6,.block7{background-size:cover}.tile-blockB{width:475px;margin:8px 8px 10px}.block7{background-position:center}.footer-column-logo{margin:-1px 85px 0 30px}.footer-column{margin-right:91px}.footer-column-copyR-logo,.footer-column-copyR-text{margin-right:30px}}@media only screen and (max-width:767px){.footer,header{min-width:320px}header{height:540px;background:url(../img/header_fon.jpg) center no-repeat;background-size:cover}header .wrapper{padding:0 10px}.tile,.wrapper{width:300px}.header-top{top:20px;margin-left:-16px;text-align:center;line-height:31px}.header-top-logo{position:absolute;top:144px;left:77px;margin-left:-1px}.header-top-btn{float:none;margin-right:2px;position:relative;left:-113px}.singUp{left:65px;display:inline-block;width:84px;margin:-1px 6px 0 18px}.header-title{margin-top:186px}.header-title-h1{width:282px;font-size:30px;line-height:36px;margin:1px 0 0}.header-title-h2{width:220px;font-size:18px;line-height:22px;margin:8px auto 15px}.content-info{margin-top:28%}.header-title-btn,.partner-btn,.search-btn,.search-input{width:280px}.partner,.steps,.tile{padding-top:33px}.search-h3,.steps-h3,.tile-h3{margin-bottom:14px}.partner-h3{margin:0 0 14px -7px}.step1{background:url(../img/steps/min/step1.jpg) no-repeat}.step1 .content-info{margin-top:27%;margin-bottom:17px}.step2{background:url(../img/steps/min/step2.jpg) no-repeat}.step2 .content-info{margin-top:39%;margin-bottom:16px}.step2 .content-info-title{margin:0 0 0 -2px}.step2 .content-info-description{margin:10px 0 0}.step3{background:url(../img/steps/min/step3.jpg) no-repeat}.step3 .content-info{margin-top:27.5%;margin-bottom:15px}.step3 .content-info-title{margin:0 0 0 -2px}.step3 .content-info-description{margin:12px 0 0}.steps-block-arrow{display:none}.steps-block-content{display:block}.steps-h3{margin:1px 0 13px -5px}.steps-block{width:300px;height:240px;margin-bottom:10px;margin-right:0;position:relative}.partner{padding-top:25px}.partner-block-item{margin-bottom:23px}.img1{margin-left:59px}.img3{margin-left:49px;margin-top:4px}.img2,.img4{margin:4px 0 0 47px}.bItem1{order:1;padding:0;margin:0 20px 0 0}.bItem2{order:3}.bItem3{order:2}.bItem4{order:3}.bItem2,.bItem3,.bItem4{padding:0;margin:23px 0 0}.title1{margin-left:18px;margin-top:13px}.title3{margin:14px 0 0 -2px}.title4{margin:13px 0 0 -6px}.desc3{margin:14px 0 0}.desc1{margin-left:16px}.desc4{margin:13px 0 0 -8px}.block7{margin-left:0}.partner-btn{margin:47px auto 0;line-height:38px;padding:0 3px 0 0}.tile-h3{margin-bottom:12px}.tile-wrapper{margin:0 auto}.tile-blockB,.tile-blockS{width:300px;height:120px;margin:0 0 10px}.footer-column,.footer-column-logo{width:240px;display:inline-block;float:none}.block1,.block2,.block3,.block4,.block5,.block6,.block7{background-size:cover;background-position:inherit}.search{padding-top:13px}.search-h3{margin:14px 0 0 -3px}.search-text{margin:8px 0 18px -2px}.search-input{margin-right:0;padding:0 13px}.search-btn{margin-top:10px;padding:0 4px 0 0}.footer{margin-top:40px;text-align:center;padding:16px 0}.footer .wrapper{padding:0 30px}.footer-column-logo{margin:-1px 85px 10px 30px}.footer-column-logo-link{margin-left:-43px}.footer-column{margin:0 auto 5px}.footer-column-ul-li:first-child{margin:3px 0 0 -22px;display:block}.footer-column-ul-li{margin-right:12px;display:inline-block}.footer-li-first{margin-left:-29px}.footer-li{margin-left:-3px}.footer-column-copyR{display:inline-block;float:none;text-align:center;margin:10px auto 0}.footer-column-copyR-text{margin:0 42px 0 0}.footer-column-copyR-logo{float:none;display:inline-block;margin:5px 0 0 -43px}}
/*# sourceMappingURL=data:application/json;base64, */
